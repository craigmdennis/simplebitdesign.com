$grid-line-width: 1px;
$grid-line: $grid-line-width solid $color-athensgray;

@mixin span($columns) {
  width: (100% / $grid-columns) * $columns;
  width: calc( (100% / #{$grid-columns}) * #{$columns} );
}

.l-grid {
  @include rwd( tablet upto-desktop desktop, false ) {
    @include row;
    display: flex;
    flex-wrap: wrap;
  }
}

[class*="l-grid__span"] {
  width: 100%;
  position: relative;
  flex-shrink: 0;
  display: flex;
  flex-flow: column;
}

.l-grid--baseline {
  > * {
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
  }
}


.l-grid__span--8 {
  @include rwd( desktop ) {
    @include span( 8 );
  }
}

.l-grid__span--6 {
  @include rwd( tablet desktop ) {
    @include span( 6 );
  }
}

.l-grid__span--4 {
  @include rwd( desktop ) {
    @include span( 4 );
  }
}

.l-grid__span--3 {
  @include rwd( upto-desktop desktop ) {
    @include span( 3 );
  }
}

.l-grid--lines {

  > * {
    border-bottom: $grid-line;
    margin-bottom: -$grid-line-width;
  }

  > .l-grid__span--6 {
    @include rwd( desktop, false ) {
      &:not(:nth-child(2n)) {
        border-right: $grid-line;
      }
    }
  }

  > .l-grid__span--3 {
    @include rwd( upto-desktop, false ) {
      &:not(:nth-child(4n)) {
        border-right: $grid-line;
      }
    }
  }
}

.l-grid--gutter {
  @include rwd( desktop ) {
    flex-wrap: nowrap;
    width: auto;
    margin-left: -$gutter/4;
    margin-right: -$gutter/4;

    > * {
      margin-left: $gutter/4;
      margin-right: $gutter/4;
    }
  }
}
